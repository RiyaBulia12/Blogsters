---
openapi: 3.0.1
info:
  title: API V1
  version: v1
servers:
- url: https://{defaultHost}
  variables:
    defaultHost:
      default: www.example.com
paths:
  /api/v1/users:
    get:
      summary: Returns a list of all users.
      tags:
      - Users
      responses:
        '200':
          description: A JSON array of user names
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        '401':
          description: unauthorized users
  /api/v1/users/{id}:
    get:
      summary: Returns a list of post for a specified user id.
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
  /api/v1/users/{id}/posts:
    get:
      summary: List all posts for a User
      tags:
      - Posts
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Retrieved Posts Lists
        '400':
          description: The specified user ID is invalid (not a number).
        '404':
          description: A user with the specified ID was not found.
  /api/v1/users/{id}/posts/{post_id}:
    get:
      summary: Returns specified Post by the ID
      tags:
      - Posts
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      - in: path
        name: post_id
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Retrieved single post
        '400':
          description: The specified user ID is invalid (not a number).
        '404':
          description: A user with the specified ID was not found.
  /api/v1/users/{id}/posts/{post_id}/comments:
    get:
      summary: Get all comments
      tags:
      - Comments
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      - in: path
        name: post_id
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Comments Retrieved
        '400':
          description: The specified user ID is invalid (not a number).
        '404':
          description: A user with the specified ID was not found.
    post:
      summary: Create a comment
      tags:
      - Comments
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      - in: path
        name: post_id
        required: true
        schema:
          type: string
      responses:
        '201':
          description: Comment Created
  /api/v1/users/{id}/posts/{post_id}/likes:
    get:
      summary: Get all likes
      tags:
      - Likes
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      - in: path
        name: post_id
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Likes Retrieve
        '400':
          description: The specified user ID/Post ID is invalid (not a number).
        '404':
          description: A user with the specified ID/Post ID was not found.
    post:
      summary: Create a like
      tags:
      - Likes
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      - in: path
        name: post_id
        required: true
        schema:
          type: string
      responses:
        '201':
          description: Like Generated
        '400':
          description: The specified user ID/Post ID is invalid (not a number).
        '404':
          description: A user with the specified ID/Post ID was not found.
